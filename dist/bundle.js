(()=>{"use strict";function t(t){let e;try{e=window[t];const s="__storage_test__";return e.setItem(s,s),e.removeItem(s),!0}catch(t){return t instanceof DOMException&&"QuotaExceededError"===t.name&&e&&0!==e.length}}function e(t,e){function s(t){let e={};return t.forEach((t=>{e[t.getId()]=t.getCompleteInfo()})),e}return this.id=t,this.list=new Array,this.listName=e,this.types=new Array,{getId:()=>this.id,addTodo:t=>{this.list.push(t)},getTodoListJson:s,getTodoList:()=>this.list,getListName:()=>{this.listName},updateListName:t=>{this.listName=t},addTypes:t=>{this.types.push(t)},getTypes:()=>this.types,removeFromTodoList:t=>{t<this.list.length()&&this.list.splice(t,1)},getListData:()=>({id:this.id,list:this.list,listName:this.listName,types:this.types}),getListDataObject:()=>({id:this.id,listName:this.listName,list:s(this.list),types:this.types})}}function s(t,e,s,i,o,a,l,h){return this.id=t,this.title=e,this.desc=s,this.dueDate=new Date(i),this.priority=o,this.notes=a,this.checkList=l,this.completed=!1,this.type=h,this.createDate=new Date,{getId:()=>this.id,markTodoCompletd:()=>{this.completed=!0},isCompleted:()=>this.completed,getBasicInfo:()=>({id:this.id,title:this.title,desc:this.desc,dueDate:this.dueDate,completed:this.completed,type:this.type,createDate:this.createDate}),getCompleteInfo:()=>({id:this.id,title:this.title,desc:this.desc,dueDate:this.dueDate,completed:this.completed,priority:this.priority,notes:this.notes,checkList:this.checkList,type:this.type,createDate:this.createDate})}}let i=function(){if(t("localStorage")){let t=window.localStorage;return JSON.parse(t.getItem("todoList_state_latest"))||{}}return{}}();!function(e){if(console.log("allData: ",JSON.stringify(e)),t("localStorage"))window.localStorage.setItem("todoList_state_latest",JSON.stringify(e))}(i),console.log(i);const o=function(t){let i=[];return Object.entries(t).map((t=>{let o=t[0],a=t[1];const l=new e(o,a.listName);Object.entries(a.list).map((t=>{const e=t[1];console.log("parsingData from localStorage: ",e);const i=new s(e.id,e.title,e.desc,e.dueDate,e.priority,e.notes,e.checkList,e.type);l.addTodo(i)})),i.push(l)})),i}(i);console.log("parsedData: ",o),console.log(o[0]?.getListData()),console.log(o[0]?.getTodoList()[0])})();